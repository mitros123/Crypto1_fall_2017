Hello Akshay, Kostas here.


Well I have an idea of comparing two hashes, without each of the parties seeing the hash of the other. It is necessary that both people follow the protocol (as per the assumptions).

I will describe it in a high-level notion. Please confirm if it is correct.

Alice samples a random value x, and publishes g^x. let's consider g^x as the public key of the "server".

She encrypts m1 (the hash of her file) by sampling a random y, as El Gamal encryption dictates. She sends to Bob (g^y, m1*g^(xy)).

Bob computes the inverse of his hash, m2^(-1). If m1 and m2 are the same, then the product m1*m2^(-1)=1.
He encrypts m2 sampling a y' using El Gamal, but does not send his encryption. (g^(y'),m2^(-1)*g(xy')).

The next step for Bob is to multiply the two encryptions of m1 and m2^(-1), and the result is ( g^(y+y'),m1*m2^(-1)*g^(x(y+y')) ) . That is the result of homomorphic encryption of El Gamal.
Notice that the product of the two ciphertexts is the ciphertext of the two products (homomorphism for multiplication).
If Bob sends Alice the ciphertext of the two products, she can decrypt and retrieve m1*m2^(-1). As she knows m1, she can recover m2. So, Bob "masks" m2^(-1) by multiplying it with a random value r.

So, what he sends is r*m1*m2^(-1)*g^(x(y+y')).

Alice cannot decrypt (she could if she had g^(y+y'), but even then she would get r*m2^(-1) after the decryption, which is random). Note: because she does not even have g^(y+y'), perhaps we don't even need the random value r.
Now both need to see if the last message sent ( r*m1*m2^(-1)*g^(x(y+y')) , and let's call it "M") is equal to r*g^(x(y+y')) . If it is, m1 and m2 are the same.

Alice creates g^(xy), and puts it as an exponent to g. She transmits g^(g^(xy)).
Bob creates r*g^(xy'), and puts it as an exponent to g. He transmits g^(r*g^(xy')).

They combine the exponents as per the Diffie Hellman key creation, and they both get g^(r*g^(x(y+y'))).
They check if g^M is equal to that. If it is, then m1 and m2 are the same. If it is not, then they are not.

What do you think?

Best,
Kostas


